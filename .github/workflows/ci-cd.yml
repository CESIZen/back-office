name: Construction du workflow
run-name: ${{github.actor}} a lancé les actions GitHub 🚀
on: [push]
jobs:
  audit:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🚀 Lancement de l'audit"
      - name: Vérifier le code du dépôt
        uses: actions/checkout@v4
      - run: npm clean-install
      - run: npm audit --audit-level=moderate
      - run: echo "🏁 Étapes d'audit terminées"

  linter:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🚀 Lancement du linter"
      - name: Vérifier le code du dépôt
        uses: actions/checkout@v4
      - run: npm clean-install
      - run: npm run lint
      - run: echo "🏁 Étapes de linter terminées"

  build-push-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs:
      - audit
    steps:
      - uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build et push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/cesizen/back-office/vite:${{ github.ref_name }}
          build-args: |
            VITE_API_URL=http://ec2-18-204-77-83.compute-1.amazonaws.com:3000/api

  deploy-docker-prod:
    runs-on: ubuntu-latest
    if: ${{github.ref_name == 'main'}}
    environment:
      name: prod
      url: http://ec2-18-204-77-83.compute-1.amazonaws.com/
    needs:
      - build-push-docker
    steps:
      - uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PASSWORD }}
          script: |
            cd cesizen-prod
            sudo docker compose -f docker-compose-bo.prod.yml pull
            sudo docker compose -f docker-compose-bo.prod.yml up -d --force-recreate